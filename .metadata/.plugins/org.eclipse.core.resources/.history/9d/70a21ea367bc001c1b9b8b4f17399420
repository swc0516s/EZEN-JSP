package com.seoil.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import com.seoil.dto.MovieVO;

import util.DBManager;

public class MovieDAO {

	private MovieDAO() {
		super();
	}

	public static void setInstance(MovieDAO instance) {
		MovieDAO.instance = instance;
	}

	private static MovieDAO instance = new MovieDAO();

	public static MovieDAO getInstance() {
		return instance;

	}

	public ArrayList<MovieVO> selectAllMovie() {
		String sql = "select * from movie order by desc";
		ArrayList<MovieVO> productList = new ArrayList<MovieVO>();
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();

			while (rs.next()) {
				MovieVO mVo = new MovieVO();
				mVo.setCode(rs.getInt("code"));
				;
				mVo.setTitle(rs.getString("Title"));
				mVo.setPrice(rs.getInt("price"));
				mVo.setDirector(rs.getString("director"));
				mVo.setActor(rs.getString("actor"));
				mVo.setPoster(rs.getString("poster"));
				mVo.setSynopsis(rs.getString("synopsis"));
				productList.add(mVo);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			util.DBManager.close(rs, pstmt, conn);
		}
		return productList;
	}

	public void insertMovie(MovieVO mVo) {
		String sql = "insert into movie values(movie_seq.nextval,?,?,?,?,?,?)";

		Connection conn = null;
		PreparedStatement pstmt = null;

		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);

			pstmt.setString(1, mVo.getTitle());
			pstmt.setInt(2, mVo.getPrice());
			pstmt.setString(3, mVo.getDirector());
			pstmt.setString(4, mVo.getActor());
			pstmt.setString(5, mVo.getPoster());
			pstmt.setString(6, mVo.getSynopsis());
			pstmt.executeQuery();

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			util.DBManager.close(pstmt, conn);

		}
	}

	public MovieVO selectProductByCode(int code) {
		MovieVO mvo = null;
		String sql = "select * from movie where code=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs= null;
		
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);

			pstmt.setInt(1, code);
			rs=pstmt.executeQuery();
			
			if(rs.next()) {
				mvo=new MovieVO();
				mvo.setCode(rs.getInt("code"));
				mvo.setTitle(rs.getString("title"));
				mvo.setPrice(rs.getInt("price"));
				mvo.setDirector(rs.getString("director"));
				mvo.setActor(rs.getString("actor"));
				mvo.setPoster(rs.getString("poster"));
				mvo.setSynopsis(rs.getString("synopsis"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			util.DBManager.close(rs, pstmt, conn);

		}
		
		return mvo;

	}
	
	public void deleteMovie(int code) {
		String sql="delete from movie where code=?";
		Connection conn=null;
		PreparedStatement pstmt = null;
		
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, code);
			pstmt.executeUpdate();

			
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			util.DBManager.close(pstmt, conn);

		}
	}
	
	public void updateProduct(MovieVO mVO) {
		String sql="update movie set title=?,price=?,director=?,actor=?,poster=?,synopsis=? where code=?";
		
		Connection conn=null;
		PreparedStatement pstmt = null;
		ResultSet rs= null;
		
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
				
			pstmt.setString(1, mVo.getTitle());
			pstmt.setInt(2, mVo.getPrice());
			pstmt.setString(3, mVo.getDirector());
			pstmt.setString(4, mVo.getActor());
			pstmt.setString(5, mVo.getPoster());
			pstmt.setString(6, mVo.getSynopsis());
			pstmt.executeQuery();
				
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			util.DBManager.close(pstmt, conn);

		}
		
		
	}
}
